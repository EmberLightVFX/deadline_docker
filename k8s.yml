---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: database
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: csi-rbd-3-sc
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: repo
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: csi-cephfs-sc
  resources:
    requests:
      storage: 1000Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: installers
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: csi-cephfs-sc
  resources:
    requests:
      storage: 1000Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
spec:
  selector:
    matchLabels:
      app: database
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: database
    spec:
      securityContext:
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: database
          image: ghcr.io/remram44/deadline_docker/db
          securityContext:
            allowPrivilegeEscalation: false
          ports:
            - containerPort: 27100
              name: database
          volumeMounts:
            - name: client-certs
              mountPath: /client_certs
              readOnly: true
            - name: repo
              mountPath: /repo
            - name: database
              mountPath: /opt/Thinkbox/DeadlineDatabase10/mongo/data
      volumes:
        - name: client-certs
          secret:
            secretName: client-certs
            optional: false
        - name: repo
          persistentVolumeClaim:
            claimName: repo
        - name: database
          persistentVolumeClaim:
            claimName: database
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rcs
spec:
  selector:
    matchLabels:
      app: rcs
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: rcs
    spec:
      securityContext:
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: rcs
          image: ghcr.io/remram44/deadline_docker/client
          securityContext:
            allowPrivilegeEscalation: false
          args: ["rcs"]
          env:
            - name: DEADLINE_VERSION
              value: "10.3.0.15"
            - name: RCS_HTTP_PORT
              value: "8888"
            - name: USE_RCS_TLS
              value: "TRUE"
            - name: RCS_TLS_PORT
              value: "4433"
            - name: RCS_CERT_PASS
              valueFrom:
                secretKeyRef:
                  name: deadline
                  key: rcsCertPass
            - name: DB_CERT_PASS
              valueFrom:
                secretKeyRef:
                  name: deadline
                  key: dbCertPass
            - name: SECRETS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: deadline
                  key: secretsUsername
            - name: SECRETS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: deadline
                  key: secretsPassword
            - name: DB_HOST
              value: "database"
            - name: USE_WEBSERVICE
              value: "FALSE"
            - name: USE_LICENSE_FORWARDER
              value: "FALSE"
          ports:
            - containerPort: 4433
              name: rcs-tls
            - containerPort: 8888
              name: rcs
          volumeMounts:
            - name: client-certs
              mountPath: /client_certs
              readOnly: true
            - name: server-certs
              mountPath: /server_certs
              readOnly: true
            - name: repo
              mountPath: /repo
            - name: installers
              mountPath: /installers
      volumes:
        - name: client-certs
          secret:
            secretName: client-certs
            optional: false
        - name: server-certs
          secret:
            secretName: server-certs
            optional: false
        - name: repo
          persistentVolumeClaim:
            claimName: repo
        - name: installers
          persistentVolumeClaim:
            claimName: installers
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: web
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: web
    spec:
      securityContext:
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: rcs
          image: ghcr.io/remram44/deadline_docker/client
          securityContext:
            allowPrivilegeEscalation: false
          args: ["webservice"]
          env:
            - name: DEADLINE_VERSION
              value: "10.3.0.15"
            - name: RCS_HTTP_PORT
              value: "8888"
            - name: USE_RCS_TLS
              value: "TRUE"
            - name: RCS_TLS_PORT
              value: "4433"
            - name: RCS_CERT_PASS
              valueFrom:
                secretKeyRef:
                  name: deadline
                  key: rcsCertPass
            - name: DB_CERT_PASS
              valueFrom:
                secretKeyRef:
                  name: deadline
                  key: dbCertPass
            - name: SECRETS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: deadline
                  key: secretsUsername
            - name: SECRETS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: deadline
                  key: secretsPassword
            - name: DB_HOST
              value: "database"
            - name: USE_WEBSERVICE
              value: "FALSE"
            - name: USE_LICENSE_FORWARDER
              value: "FALSE"
          ports:
            - containerPort: 8081
              name: http
          volumeMounts:
            - name: client-certs
              mountPath: /client_certs
              readOnly: true
            - name: repo
              mountPath: /repo
      volumes:
        - name: client-certs
          secret:
            secretName: client-certs
            optional: false
        - name: repo
          persistentVolumeClaim:
            claimName: repo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: forwarder
spec:
  selector:
    matchLabels:
      app: forwarder
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: forwarder
    spec:
      securityContext:
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: rcs
          image: ghcr.io/remram44/deadline_docker/client
          securityContext:
            allowPrivilegeEscalation: false
          args: ["forwarder"]
          env:
            - name: DEADLINE_VERSION
              value: "10.3.0.15"
            - name: RCS_HTTP_PORT
              value: "8888"
            - name: USE_RCS_TLS
              value: "TRUE"
            - name: RCS_TLS_PORT
              value: "4433"
            - name: RCS_CERT_PASS
              valueFrom:
                secretKeyRef:
                  name: deadline
                  key: rcsCertPass
            - name: DB_CERT_PASS
              valueFrom:
                secretKeyRef:
                  name: deadline
                  key: dbCertPass
            - name: SECRETS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: deadline
                  key: secretsUsername
            - name: SECRETS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: deadline
                  key: secretsPassword
            - name: DB_HOST
              value: "database"
            - name: USE_WEBSERVICE
              value: "FALSE"
            - name: USE_LICENSE_FORWARDER
              value: "FALSE"
          ports:
            - containerPort: 17004
              name: "port-17004"
            - containerPort: 17005
              name: "port-17005"
            - containerPort: 443
              name: "port-443"
            - containerPort: 4101
              name: "port-4101"
            - containerPort: 6101
              name: "port-6101"
            - containerPort: 5060
              name: "port-5060"
          volumeMounts:
            - name: client-certs
              mountPath: /client_certs
              readOnly: true
            - name: repo
              mountPath: /repo
      volumes:
        - name: client-certs
          secret:
            secretName: client-certs
            optional: false
        - name: repo
          persistentVolumeClaim:
            claimName: repo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: filebrowser
spec:
  selector:
    matchLabels:
      app: filebrowser
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: filebrowser
    spec:
      securityContext:
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: rcs
          image: filebrowser/filebrowser
          securityContext:
            allowPrivilegeEscalation: false
          ports:
            - containerPort: 80
              name: http
          volumeMounts:
            - name: repo
              mountPath: /srv/repo
            - name: installers
              mountPath: /srv/installers
      volumes:
        - name: repo
          persistentVolumeClaim:
            claimName: repo
        - name: installers
          persistentVolumeClaim:
            claimName: installers
---
apiVersion: v1
kind: Service
metadata:
  name: database
spec:
  type: ClusterIP
  selector:
    app: database
  ports:
    - port: 27100
      targetPort: 27100
---
apiVersion: v1
kind: Service
metadata:
  name: rcs
spec:
  type: ClusterIP
  selector:
    app: rcs
  ports:
    - port: 4433
      targetPort: 4433
      name: rcs-tls
    - port: 8888
      targetPort: 8888
      name: rcs
---
apiVersion: v1
kind: Service
metadata:
  name: web
spec:
  type: ClusterIP
  selector:
    app: web
  ports:
    - port: 8081
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: forwarder
spec:
  type: ClusterIP
  selector:
    app: forwarder
  ports:
    - targetPort: 17004
      port: 17004
      name: "port-17004"
    - targetPort: 17005
      port: 17005
      name: "port-17005"
    - targetPort: 443
      port: 443
      name: "port-443"
    - targetPort: 4101
      port: 4101
      name: "port-4101"
    - targetPort: 6101
      port: 6101
      name: "port-6101"
    - targetPort: 5060
      port: 5060
      name: "port-5060"
---
apiVersion: v1
kind: Service
metadata:
  name: filebrowser
spec:
  type: ClusterIP
  selector:
    app: filebrowser
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: haproxy
    haproxy.org/forwarded-for: "true"
    haproxy.org/ssl-redirect: "true"
    haproxy.org/ssl-redirect-code: "301"
  name: web
spec:
  rules:
    - host: deadline.hsrn.nyu.edu
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: haproxy
    haproxy.org/forwarded-for: "true"
    haproxy.org/ssl-redirect: "true"
    haproxy.org/ssl-redirect-code: "301"
  name: filebrowser
spec:
  rules:
    - host: deadline-filebrowser.hsrn.nyu.edu
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: filebrowser
                port:
                  number: 80

name: Docker Build and Publish

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  repository_dispatch:
    types: [docker-publish]
  workflow_dispatch:
    inputs:
      VERSION:
        description: "Version"
        required: true
        default: "1.0.0"
      LATEST:
        description: "Latest"
        required: true
        default: true
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository@L}}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Set Environment Variable
        run: |
          if [ -n "${{ github.event.client_payload.VERSION }}" ]; then
            VERSION=${{ github.event.client_payload.VERSION }}
          else
            VERSION=${{ inputs.VERSION }}
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

          if [ -z "${{ inputs.LATEST }}" ] || [ "${{ inputs.LATEST }}" == "true" ]; then
            LATEST="true"
          else
            LATEST="false"
          fi
          echo "LATEST=$LATEST" >> $GITHUB_ENV

      - name: Version and Latest tag
        run: |
          echo "The VERSION is ${{ env.VERSION }}"
          echo "Latest tag is set to  ${{ env.LATEST }}"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: latest=${{ env.LATEST }}
          tags: type=raw,value=${{ env.VERSION }}

      - name: Meta version
        run: echo "The Meta is ${{ steps.meta.outputs.tags }}"

      - name: Build and push Docker image for Dockerfile.database
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: Dockerfile.database
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:database-${{ env.VERSION }}

      - name: Build and push Docker image for Dockerfile.client
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: Dockerfile.client
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:client-${{ env.VERSION }}
